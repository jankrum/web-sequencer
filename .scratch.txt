SCORE EVENTS
The design of the score is to maximize ease in reading/writing
Every score event has a type and a time (tone.js time units, etc: 3, "2n", "5:0:1", { "1m": 5, "16n": 4 })
Types of events:
- tempo
    - bpm
- note
    - pitch (pitch name units, etc: "C4", "Bb1")
    - duration (tone.js time units)
- stop

EVENT BUFFER EVENTS
The design of the event buffer is to minimize compute time
Every event in the event buffer has a type and a position (number-of-beats-into-the-song units)
Types of events:
- tempo
    - bpm
- noteOn
    - pitch (in midi number units, etc: 60, 22)
- noteOff
    - pitch (in midi number units)
- computed
    - callback (takes in event buffer and modifies it)
- stop


Stuff to do next:
- Multiple parts per chart
- Ways of simplifying dummy script
- 8 step sequencer
- Find way to make workers not rely on separate server call
- Integrate Lua interpreter and musicXML parser

The program starts
We create the transporter
We create the leader
We connect the transporter and the leader to each other
We load the setlist to the leader
The leader sees what part and script it needs